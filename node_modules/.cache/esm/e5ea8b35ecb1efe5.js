let Game,createPlayBlocks,itemClicked,removeHidden,itemPicked;_ecb‍.w("../src/function.js",[["Game",["Game"],function(v){Game=v}],["createPlayBlocks",["createPlayBlocks"],function(v){createPlayBlocks=v}],["itemClicked",["itemClicked"],function(v){itemClicked=v}],["removeHidden",["removeHidden"],function(v){removeHidden=v}],["itemPicked",["itemPicked"],function(v){itemPicked=v}]]);


describe("itemClicked",()=>{

    xit('should return a value from selected child node',()=>{
        expect(itemClicked(e)).toHaveText('innerhtml')
    })
});

describe("removeHidden",()=>{

    xit('should return a value from selected child node',()=>{
        expect(removeHidden(e)).not.toHaveClass('hidden')
    })
});

describe("itemPicked",()=>{

    xit('should return a value from selected child node',()=>{
        expect(itemPicked(e)).not.ToBeNull()
    })
});

describe("compare",()=>{
    //mock and spie on this
    xit('should return a value from selected child node',()=>{
        expect(compare(e)).toHaveBeenCalled();
    })
});